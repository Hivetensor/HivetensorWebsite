version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: hivetensor
      POSTGRES_USER: hivetensor_user
      POSTGRES_PASSWORD: hivetensor_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hivetensor_user -d hivetensor"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API (Development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://hivetensor_user:hivetensor_password@db:5432/hivetensor
      SECRET_KEY: your-super-secret-key-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    depends_on:
      - db
    volumes:
      - ./backend:/app

  # Frontend (Development)
  frontend:
    image: node:18-alpine
    working_dir: /app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm ci && npm run dev"

volumes:
  postgres_data: 